Dear Soot Users,

We are pleased to announce that Soot version 2.2.5 is now available
at: http://www.sable.mcgill.ca/soot/

This release contains the following additions and improvements:

1. Soot now has an option to prepend the classpath given on the
   command line to the default classpath.  See the documentation on 
   the option -pp for details.

2. Included Manu Sridharan's demand-driven points-to analysis.  See
   http://doi.acm.org/10.1145/1133255.1134027 for details.  It can be
   activated via: -p cg.spark cs-demand:true

3. Added local must-alias and not-may alias analyses. See package
   soot.jimple.toolkits.pointer.

4. Updated NullnessAnalysis for better performance. Thanks to Julian
   Tibble!

5. The flow analysis framework is now generic. One can explicitly
   declare the type of the abstraction and that is used for the fixed
   point iteration and the node type for the graph that is iterated over.
   This avoids a lot of casting one had to do in the past.

6. Between versions 2.2.3 and 2.2.4, a bug was introduced to Spark:
   PointsToSetInternal now implements equals/hashCode which confused the
   propagator algorithm because it was relying on comparison by identity.
   This lead to a five-fold slowdown on the points-to analyses and
   potentially wrong results.  The bug has now been fixed by modifying
   the propagator algorithm. Original speed was restored.

7. Richard Halpert's lock allocator as published at PACT'07, see:
   http://www.sable.mcgill.ca/publications/papers/#pact2007
   It is accessible via the wjtn (whole-jimple transaction) pack.

Due to the use of generics this version of Soot as well as all
upcoming versions require to run on a JVM supporting Java version 5 or
higher.

As of version 2.2.0 the Soot bugzilla is available at:
http://svn.sable.mcgill.ca/bugzilla/. We encourage you to add any Soot
bugs there.

Also, as of version 2.2.0 the Soot wiki is available at:
http://svn.sable.mcgill.ca/wiki/index.php/SootProject. The Soot team
will be using this site for discussing upcoming work, so if you would
like to know what's going on look there.

Regards,

Eric Bodden 
Sable Research Group, McGill University
