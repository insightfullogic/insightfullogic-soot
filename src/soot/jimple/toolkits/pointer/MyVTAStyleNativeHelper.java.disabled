/**
 * Implementation of util.NativeHelper.
 *
 * @author Feng Qian
 */
package soot.jimple.toolkits.pointer;

import soot.*;
import soot.jimple.*;
import soot.jimple.toolkits.pointer.constraints.*;
import soot.jimple.toolkits.pointer.representations.*;
import soot.jimple.toolkits.pointer.util.*;

import java.util.*;

public class MyVTAStyleNativeHelper extends MyNativeHelper{

  /* This is a implementation specific choice, for VTA, we do not 
   * distinguish the base of array reference. So the unique least
   * object as base is conservative.
   */
  protected 
    ReferenceVariable arrayElementOfImpl(ReferenceVariable base) { 
    ReferenceVariable elm = 
      ArrayElementVariable.produce(Environment.getLeastArrayObject());
    return elm;
  }
}
