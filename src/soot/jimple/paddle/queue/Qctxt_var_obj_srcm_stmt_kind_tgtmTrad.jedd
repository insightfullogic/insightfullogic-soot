/* Soot - a J*va Optimization Framework
 * Copyright (C) 2003, 2004 Ondrej Lhotak
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
 * Boston, MA 02111-1307, USA.
 */

package soot.jimple.paddle.queue;
import soot.util.*;
import soot.jimple.paddle.bdddomains.*;
import soot.jimple.paddle.*;
import soot.jimple.toolkits.callgraph.*;
import soot.*;
import soot.util.queue.*;
import jedd.*;
import java.util.*;

public class Qctxt_var_obj_srcm_stmt_kind_tgtmTrad extends Qctxt_var_obj_srcm_stmt_kind_tgtm {
    public Qctxt_var_obj_srcm_stmt_kind_tgtmTrad( String name ) { super(name); }
    private ChunkedQueue q = new ChunkedQueue();
    public void add( Context _ctxt, VarNode _var, AllocNode _obj, SootMethod _srcm, Unit _stmt, Kind _kind, SootMethod _tgtm ) {
        q.add( _ctxt );
        q.add( _var );
        q.add( _obj );
        q.add( _srcm );
        q.add( _stmt );
        q.add( _kind );
        q.add( _tgtm );
        invalidate();
    }
    public void add( <ctxt:C2, var:V1, obj:H1, srcm:MS, stmt:ST, kind:KD, tgtm:MT> in ) {
        Iterator it = in.iterator( new Attribute[] { ctxt.v(), var.v(), obj.v(), srcm.v(), stmt.v(), kind.v(), tgtm.v() } );
        while( it.hasNext() ) {
            Object[] tuple = (Object[]) it.next();
            for( int i = 0; i < 7; i++ ) {
                add( (Context) tuple[0], (VarNode) tuple[1], (AllocNode) tuple[2], (SootMethod) tuple[3], (Unit) tuple[4], (Kind) tuple[5], (SootMethod) tuple[6] );
            }
        }
    }
    public Rctxt_var_obj_srcm_stmt_kind_tgtm reader( String rname ) {
        return new Rctxt_var_obj_srcm_stmt_kind_tgtmTrad( q.reader(), name+":"+rname );
    }
}
