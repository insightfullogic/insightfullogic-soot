package soot.jbuddy;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.11u-20020329-0156
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class JBuddy  {
  public final static native void set_s_bddPair_result(long jarg1, long jarg2);
  public final static native long get_s_bddPair_result(long jarg1);
  public final static native void set_s_bddPair_last(long jarg1, int jarg2);
  public final static native int get_s_bddPair_last(long jarg1);
  public final static native void set_s_bddPair_id(long jarg1, int jarg2);
  public final static native int get_s_bddPair_id(long jarg1);
  public final static native void set_s_bddPair_next(long jarg1, long jarg2);
  public final static native long get_s_bddPair_next(long jarg1);
  public final static native long new_s_bddPair();
  public final static native void delete_s_bddPair(long jarg1);
  public final static native void set_s_bddStat_produced(long jarg1, int jarg2);
  public final static native int get_s_bddStat_produced(long jarg1);
  public final static native void set_s_bddStat_nodenum(long jarg1, int jarg2);
  public final static native int get_s_bddStat_nodenum(long jarg1);
  public final static native void set_s_bddStat_maxnodenum(long jarg1, int jarg2);
  public final static native int get_s_bddStat_maxnodenum(long jarg1);
  public final static native void set_s_bddStat_freenodes(long jarg1, int jarg2);
  public final static native int get_s_bddStat_freenodes(long jarg1);
  public final static native void set_s_bddStat_minfreenodes(long jarg1, int jarg2);
  public final static native int get_s_bddStat_minfreenodes(long jarg1);
  public final static native void set_s_bddStat_varnum(long jarg1, int jarg2);
  public final static native int get_s_bddStat_varnum(long jarg1);
  public final static native void set_s_bddStat_cachesize(long jarg1, int jarg2);
  public final static native int get_s_bddStat_cachesize(long jarg1);
  public final static native void set_s_bddStat_gbcnum(long jarg1, int jarg2);
  public final static native int get_s_bddStat_gbcnum(long jarg1);
  public final static native long new_s_bddStat();
  public final static native void delete_s_bddStat(long jarg1);
  public final static native void set_s_bddGbcStat_nodes(long jarg1, int jarg2);
  public final static native int get_s_bddGbcStat_nodes(long jarg1);
  public final static native void set_s_bddGbcStat_freenodes(long jarg1, int jarg2);
  public final static native int get_s_bddGbcStat_freenodes(long jarg1);
  public final static native void set_s_bddGbcStat_time(long jarg1, int jarg2);
  public final static native int get_s_bddGbcStat_time(long jarg1);
  public final static native void set_s_bddGbcStat_sumtime(long jarg1, int jarg2);
  public final static native int get_s_bddGbcStat_sumtime(long jarg1);
  public final static native void set_s_bddGbcStat_num(long jarg1, int jarg2);
  public final static native int get_s_bddGbcStat_num(long jarg1);
  public final static native long new_s_bddGbcStat();
  public final static native void delete_s_bddGbcStat(long jarg1);
  public final static native void set_s_bddCacheStat_uniqueAccess(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_uniqueAccess(long jarg1);
  public final static native void set_s_bddCacheStat_uniqueChain(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_uniqueChain(long jarg1);
  public final static native void set_s_bddCacheStat_uniqueHit(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_uniqueHit(long jarg1);
  public final static native void set_s_bddCacheStat_uniqueMiss(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_uniqueMiss(long jarg1);
  public final static native void set_s_bddCacheStat_opHit(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_opHit(long jarg1);
  public final static native void set_s_bddCacheStat_opMiss(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_opMiss(long jarg1);
  public final static native void set_s_bddCacheStat_swapCount(long jarg1, long jarg2);
  public final static native long get_s_bddCacheStat_swapCount(long jarg1);
  public final static native long new_s_bddCacheStat();
  public final static native void delete_s_bddCacheStat(long jarg1);
  public final static native long bdd_error_hook(long jarg1);
  public final static native long bdd_gbc_hook(long jarg1);
  public final static native long bdd_resize_hook(long jarg1);
  public final static native long bdd_reorder_hook(long jarg1);
  public final static native long bdd_file_hook(long jarg1);
  public final static native int bdd_init(int jarg1, int jarg2);
  public final static native void bdd_done();
  public final static native int bdd_setvarnum(int jarg1);
  public final static native int bdd_extvarnum(int jarg1);
  public final static native int bdd_isrunning();
  public final static native int bdd_setmaxnodenum(int jarg1);
  public final static native int bdd_setmaxincrease(int jarg1);
  public final static native int bdd_setminfreenodes(int jarg1);
  public final static native int bdd_getnodenum();
  public final static native int bdd_getallocnum();
  public final static native String bdd_versionstr();
  public final static native int bdd_versionnum();
  public final static native void bdd_stats(long jarg1);
  public final static native void bdd_cachestats(long jarg1);
  public final static native void bdd_fprintstat(long jarg1);
  public final static native void bdd_printstat();
  public final static native void bdd_default_gbchandler(int jarg1, long jarg2);
  public final static native void bdd_default_errhandler(int jarg1);
  public final static native String bdd_errstring(int jarg1);
  public final static native void bdd_clear_error();
  public final static native int bdd_true();
  public final static native int bdd_false();
  public final static native int bdd_varnum();
  public final static native int bdd_ithvar(int jarg1);
  public final static native int bdd_nithvar(int jarg1);
  public final static native int bdd_var(int jarg1);
  public final static native int bdd_low(int jarg1);
  public final static native int bdd_high(int jarg1);
  public final static native int bdd_addref(int jarg1);
  public final static native int bdd_delref(int jarg1);
  public final static native void bdd_gbc();
  public final static native int bdd_scanset(int jarg1, long jarg2, long jarg3);
  public final static native int bdd_makeset(long jarg1, int jarg2);
  public final static native long bdd_newpair();
  public final static native int bdd_setpair(long jarg1, int jarg2, int jarg3);
  public final static native int bdd_setpairs(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int bdd_setbddpair(long jarg1, int jarg2, int jarg3);
  public final static native int bdd_setbddpairs(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void bdd_resetpair(long jarg1);
  public final static native void bdd_freepair(long jarg1);
  public final static native int bdd_setcacheratio(int jarg1);
  public final static native int bdd_buildcube(int jarg1, int jarg2, long jarg3);
  public final static native int bdd_ibuildcube(int jarg1, int jarg2, long jarg3);
  public final static native int bdd_not(int jarg1);
  public final static native int bdd_apply(int jarg1, int jarg2, int jarg3);
  public final static native int bdd_and(int jarg1, int jarg2);
  public final static native int bdd_or(int jarg1, int jarg2);
  public final static native int bdd_xor(int jarg1, int jarg2);
  public final static native int bdd_imp(int jarg1, int jarg2);
  public final static native int bdd_biimp(int jarg1, int jarg2);
  public final static native int bdd_ite(int jarg1, int jarg2, int jarg3);
  public final static native int bdd_restrict(int jarg1, int jarg2);
  public final static native int bdd_constrain(int jarg1, int jarg2);
  public final static native int bdd_replace(int jarg1, long jarg2);
  public final static native int bdd_compose(int jarg1, int jarg2, int jarg3);
  public final static native int bdd_veccompose(int jarg1, long jarg2);
  public final static native int bdd_simplify(int jarg1, int jarg2);
  public final static native int bdd_exist(int jarg1, int jarg2);
  public final static native int bdd_forall(int jarg1, int jarg2);
  public final static native int bdd_unique(int jarg1, int jarg2);
  public final static native int bdd_appex(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int bdd_appall(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int bdd_appuni(int jarg1, int jarg2, int jarg3, int jarg4);
  public final static native int bdd_support(int jarg1);
  public final static native int bdd_satone(int jarg1);
  public final static native int bdd_satoneset(int jarg1, int jarg2, int jarg3);
  public final static native int bdd_fullsatone(int jarg1);
  public final static native void bdd_allsat(int jarg1, long jarg2);
  public final static native double bdd_satcount(int jarg1);
  public final static native double bdd_satcountset(int jarg1, int jarg2);
  public final static native double bdd_satcountln(int jarg1);
  public final static native double bdd_satcountlnset(int jarg1, int jarg2);
  public final static native int bdd_nodecount(int jarg1);
  public final static native int bdd_anodecount(long jarg1, int jarg2);
  public final static native long bdd_varprofile(int jarg1);
  public final static native double bdd_pathcount(int jarg1);
  public final static native void bdd_printall();
  public final static native void bdd_fprintall(long jarg1);
  public final static native void bdd_fprinttable(long jarg1, int jarg2);
  public final static native void bdd_printtable(int jarg1);
  public final static native void bdd_fprintset(long jarg1, int jarg2);
  public final static native void bdd_printset(int jarg1);
  public final static native int bdd_fnprintdot(String jarg1, int jarg2);
  public final static native void bdd_fprintdot(long jarg1, int jarg2);
  public final static native void bdd_printdot(int jarg1);
  public final static native int bdd_fnsave(String jarg1, int jarg2);
  public final static native int bdd_save(long jarg1, int jarg2);
  public final static native int bdd_fnload(String jarg1, long jarg2);
  public final static native int bdd_load(long jarg1, long jarg2);
  public final static native int bdd_swapvar(int jarg1, int jarg2);
  public final static native void bdd_default_reohandler(int jarg1);
  public final static native void bdd_reorder(int jarg1);
  public final static native int bdd_reorder_gain();
  public final static native long bdd_reorder_probe(long jarg1);
  public final static native void bdd_clrvarblocks();
  public final static native int bdd_addvarblock(int jarg1, int jarg2);
  public final static native int bdd_intaddvarblock(int jarg1, int jarg2, int jarg3);
  public final static native void bdd_varblockall();
  public final static native long bdd_blockfile_hook(long jarg1);
  public final static native int bdd_autoreorder(int jarg1);
  public final static native int bdd_autoreorder_times(int jarg1, int jarg2);
  public final static native int bdd_var2level(int jarg1);
  public final static native int bdd_level2var(int jarg1);
  public final static native int bdd_getreorder_times();
  public final static native int bdd_getreorder_method();
  public final static native void bdd_enable_reorder();
  public final static native void bdd_disable_reorder();
  public final static native int bdd_reorder_verbose(int jarg1);
  public final static native void bdd_setvarorder(long jarg1);
  public final static native void bdd_printorder();
  public final static native void bdd_fprintorder(long jarg1);
  public final static native int get_bddfalse();
  public final static native int get_bddtrue();
  public final static native void set_s_Domain_realsize(long jarg1, int jarg2);
  public final static native int get_s_Domain_realsize(long jarg1);
  public final static native void set_s_Domain_binsize(long jarg1, int jarg2);
  public final static native int get_s_Domain_binsize(long jarg1);
  public final static native void set_s_Domain_ivar(long jarg1, long jarg2);
  public final static native long get_s_Domain_ivar(long jarg1);
  public final static native void set_s_Domain_var(long jarg1, int jarg2);
  public final static native int get_s_Domain_var(long jarg1);
  public final static native long new_s_Domain();
  public final static native void delete_s_Domain(long jarg1);
  public final static native void set_domain(long jarg1);
  public final static native long get_domain();
  public final static native int fdd_extdomain(int[] jarg1, int jarg2);
  public final static native int fdd_overlapdomain(int jarg1, int jarg2);
  public final static native void fdd_clearall();
  public final static native int fdd_domainnum();
  public final static native int fdd_domainsize(int jarg1);
  public final static native int fdd_varnum(int jarg1);
  public final static native long fdd_vars(int jarg1);
  public final static native int fdd_ithvar(int jarg1, int jarg2);
  public final static native int fdd_scanvar(int jarg1, int jarg2);
  public final static native long fdd_scanallvar(int jarg1);
  public final static native int fdd_ithset(int jarg1);
  public final static native int fdd_domain(int jarg1);
  public final static native int fdd_equals(int jarg1, int jarg2);
  public final static native long fdd_file_hook(long jarg1);
  public final static native void fdd_printset(int jarg1);
  public final static native void fdd_fprintset(long jarg1, int jarg2);
  public final static native int fdd_scanset(int jarg1, long jarg2, long jarg3);
  public final static native int fdd_makeset(long jarg1, int jarg2);
  public final static native int fdd_intaddvarblock(int jarg1, int jarg2, int jarg3);
  public final static native int fdd_setpair(long jarg1, int jarg2, int jarg3);
  public final static native int fdd_setpairs(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int fdd_allsat(int jarg1, int jarg2, int[] jarg3);
  public final static native int fdd_satcount(int jarg1, int jarg2);
  // enums and constants
  public final static int bddop_and = 0;
  public final static int bddop_xor = 1;
  public final static int bddop_or = 2;
  public final static int bddop_nand = 3;
  public final static int bddop_nor = 4;
  public final static int bddop_imp = 5;
  public final static int bddop_biimp = 6;
  public final static int bddop_diff = 7;
  public final static int bddop_less = 8;
  public final static int bddop_invimp = 9;
  public final static int bddop_not = 10;
  public final static int bddop_simplify = 11;
  public final static int BDD_REORDER_NONE = 0;
  public final static int BDD_REORDER_WIN2 = 1;
  public final static int BDD_REORDER_WIN2ITE = 2;
  public final static int BDD_REORDER_SIFT = 3;
  public final static int BDD_REORDER_SIFTITE = 4;
  public final static int BDD_REORDER_WIN3 = 5;
  public final static int BDD_REORDER_WIN3ITE = 6;
  public final static int BDD_REORDER_RANDOM = 7;
  public final static int BDD_REORDER_FREE = 0;
  public final static int BDD_REORDER_FIXED = 1;
  public final static int BDD_MEMORY = (-1);
  public final static int BDD_VAR = (-2);
  public final static int BDD_RANGE = (-3);
  public final static int BDD_DEREF = (-4);
  public final static int BDD_RUNNING = (-5);
  public final static int BDD_FILE = (-6);
  public final static int BDD_FORMAT = (-7);
  public final static int BDD_ORDER = (-8);
  public final static int BDD_BREAK = (-9);
  public final static int BDD_VARNUM = (-10);
  public final static int BDD_NODES = (-11);
  public final static int BDD_OP = (-12);
  public final static int BDD_VARSET = (-13);
  public final static int BDD_VARBLK = (-14);
  public final static int BDD_DECVNUM = (-15);
  public final static int BDD_REPLACE = (-16);
  public final static int BDD_NODENUM = (-17);
  public final static int BDD_ILLBDD = (-18);
  public final static int BDD_SIZE = (-19);
  public final static int BVEC_SIZE = (-20);
  public final static int BVEC_SHIFT = (-21);
  public final static int BVEC_DIVZERO = (-22);
  public final static int BDD_ERRNUM = 24;
}
